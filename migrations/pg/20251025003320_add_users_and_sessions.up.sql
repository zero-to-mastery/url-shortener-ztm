-- Add up migration script here
BEGIN;
CREATE EXTENSION IF NOT EXISTS CITEXT;

CREATE TABLE IF NOT EXISTS users (
    id                    UUID DEFAULT uuidv7() PRIMARY KEY,
    email                 CITEXT UNIQUE NOT NULL,
    password_hash         BYTEA NOT NULL,
    display_name          TEXT,
    is_email_verified     BOOLEAN NOT NULL DEFAULT FALSE,
    created_at            TIMESTAMPTZ NOT NULL DEFAULT now(),
    last_login_at         TIMESTAMPTZ,
    jwt_token_version     INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS refresh_token_devices (
    id                   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id              UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    device_id            TEXT NOT NULL,
    current_hash         BYTEA NOT NULL,
    previous_hash        BYTEA,
    created_at           TIMESTAMPTZ NOT NULL DEFAULT now(),
    last_rotated_at      TIMESTAMPTZ,
    absolute_expires     TIMESTAMPTZ NOT NULL,
    revoked_at           TIMESTAMPTZ,
    user_agent           TEXT,
    ip                   INET,
    UNIQUE(user_id, device_id)
);

CREATE TABLE IF NOT EXISTS email_verifications (
    id             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id        UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    code           CHAR(8) NOT NULL,
    created_at     TIMESTAMPTZ NOT NULL DEFAULT now(),
    expires_at     TIMESTAMPTZ NOT NULL,
    used_at        TIMESTAMPTZ
);

CREATE TABLE IF NOT EXISTS email_change_requests (
    id               INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id          UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    old_email        CITEXT NOT NULL,
    new_email        CITEXT NOT NULL,
    code             CHAR(8) NOT NULL,
    created_at       TIMESTAMPTZ NOT NULL DEFAULT now(),
    expires_at       TIMESTAMPTZ,
    confirmed_at     TEXT,
    applied_at       TEXT,
    cancelled_at     TEXT
);

CREATE TABLE IF NOT EXISTS sign_in_attempts (
    id             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id        UUID NOT NULL,
    success        INTEGER NOT NULL,
    ip             TEXT,
    created_at     TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TABLE IF NOT EXISTS api_keys (
    id               UUID DEFAULT uuidv7() PRIMARY KEY,
    user_id          UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    name             TEXT,
    key_prefix       TEXT NOT NULL,
    token_hash       BYTEA NOT NULL,
    created_at       TIMESTAMPTZ NOT NULL DEFAULT now(),
    last_used_at     TIMESTAMPTZ,
    revoked_at       TIMESTAMPTZ
);


ALTER TABLE urls
    ADD COLUMN created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    ADD COLUMN password_hash BYTEA,
    ADD COLUMN expires_at TIMESTAMPTZ,
    ADD COLUMN description TEXT;

ALTER TABLE aliases
    ADD COLUMN created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    ADD COLUMN password_hash BYTEA,
    ADD COLUMN expires_at TIMESTAMPTZ,
    ADD COLUMN description TEXT;

COMMIT;